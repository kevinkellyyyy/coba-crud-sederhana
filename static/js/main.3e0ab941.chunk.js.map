{"version":3,"sources":["logo.svg","components/Users.js","components/AddUser.js","components/base.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Users","handleUpdate","props","updateUser","idxNum","uname","value","uemail","uphoneNum","this","allUsers","pressEditBtn","pressDelete","usersList","map","user","idx","isEditing","key","className","type","ref","val","required","defaultValue","name","email","phoneNum","onClick","scope","Component","AddUser","state","handleSubmit","e","preventDefault","addUser","target","reset","updateState","console","log","setState","onSubmit","autoComplete","placeholder","onChange","Base","users","newUser","i","filter","u","index","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3e0ab941.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\n\r\nexport default class Users extends Component{\r\n    handleUpdate = () => {\r\n        this.props.updateUser(this.idxNum, this.uname.value, this.uemail.value, this.uphoneNum.value);\r\n    }\r\n\r\n    render() {\r\n        const {allUsers, pressEditBtn, pressDelete} = this.props;\r\n        const usersList = allUsers.map((user, idx) => {\r\n            return user.isEditing === true ? (\r\n                <tr key={idx}>\r\n                    <td><input className=\"form-control\" type=\"text\" ref={(val) => {this.uname = val}} required defaultValue={user.name}/></td>\r\n                    <td><input className=\"form-control\" type=\"text\" ref={(val) => {this.uemail = val}} required defaultValue={user.email}/></td>\r\n                    <td><input className=\"form-control\" type=\"text\" ref={(val) => {this.uphoneNum = val}} required defaultValue={user.phoneNum}/></td>\r\n                    <td>\r\n                    <input type=\"button\" value=\"Update\" onClick={this.handleUpdate} ref={() => {this.idxNum = idx}} className=\"btn btn-success btn-lg\"/>\r\n                    </td>\r\n                </tr> \r\n            ) : (\r\n                <tr  key={idx}>\r\n                    <td>{user.name}</td>\r\n                    <td>{user.email}</td>\r\n                    <td>{user.phoneNum}</td>\r\n                    <td><button className=\"btn btn-warning btn-lg\" onClick={() => pressEditBtn(idx)}>Edit</button>  |  <button className=\"btn btn-danger btn-lg\" onClick={()=>pressDelete(idx)}>Delete</button></td>\r\n                </tr>\r\n            )\r\n        })\r\n        return(\r\n            <table className=\"table table-dark table-striped table-hover table-sm ta\">\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Email</th>\r\n                        <th scope=\"col\">Phone Number</th>\r\n                        <th scope=\"col\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\".table-striped\">\r\n                    {usersList}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n}","import React,{ Component } from 'react';\r\n\r\nexport default class AddUser extends Component{\r\n    state = {\r\n        name: null,\r\n        email: null,\r\n        phoneNum: null,\r\n        isEditing: false\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.addUser(this.state);\r\n        e.target.reset();\r\n    }\r\n\r\n    updateState = (e) => {\r\n        console.log(e.target.value);\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"col-4\">\r\n                            <input className=\"form-control\" type=\"text\" name=\"name\" autoComplete=\"off\" placeholder=\"Enter your name\" onChange={ this.updateState}  required />\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                            <input className=\"form-control\" type=\"text\" name=\"email\" autoComplete=\"off\" placeholder=\"Enter your email\" onChange={ this.updateState }  required />\r\n                        </div>\r\n                        <div className=\"col-2\">\r\n                            <input className=\"form-control\" type=\"text\" name=\"phoneNum\" autoComplete=\"off\" placeholder=\"Enter your phone number\" onChange={ this.updateState }  required />\r\n                        </div>\r\n                        <div className=\"col-2\">\r\n                            <input type=\"submit\" value=\"Add +\" className=\"btn btn-primary btn-lg\"/>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Users from './Users';\r\nimport AddUser from './AddUser';\r\n\r\nexport default class Base extends Component{\r\n    state = {\r\n        users: [\r\n            {name:\"Kevin Kelly Isyanta\", email: \"kevinkevin@email.com\", phoneNum: \"088222828291\", isEditing:false},\r\n            {name:\"Jason Willy Isyanta\", email: \"jasonjason@email.com\", phoneNum: \"088222567432\", isEditing:false},\r\n            {name:\"Brian Billy Isyanta\", email: \"brianbrian@email.com\", phoneNum: \"088222232123\", isEditing:false},\r\n        ]\r\n    }\r\n\r\n    addUser = (newUser) => {\r\n        let users = [...this.state.users, newUser];\r\n        this.setState({\r\n            users\r\n        });\r\n    }\r\n\r\n    pressEditBtn = (i) => {\r\n        let users = this.state.users;\r\n        users[i].isEditing = true;\r\n        this.setState({\r\n            users\r\n        });\r\n    }\r\n\r\n    updateUser = (i, uname, uemail, uphoneNum) => {\r\n        let users = this.state.users;\r\n        users[i].name = uname;\r\n        users[i].email = uemail;\r\n        users[i].phoneNum = uphoneNum;\r\n        users[i].isEditing = false;\r\n        this.setState({\r\n            users\r\n        });\r\n    }\r\n\r\n    pressDelete = (i) => {\r\n        let users = this.state.users.filter((u, index) => {\r\n            return index !== i;\r\n        });\r\n        this.setState({\r\n            users\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <h1 className=\"title\">Coba CRUD dengan React Js</h1>\r\n                <Users allUsers={this.state.users} pressEditBtn={this.pressEditBtn} updateUser={this.updateUser} pressDelete={this.pressDelete} />\r\n                <AddUser addUser={this.addUser}/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport Base from './components/base';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Base/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}